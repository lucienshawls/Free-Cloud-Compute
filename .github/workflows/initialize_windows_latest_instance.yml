name: Windows
on:
  workflow_dispatch:
    inputs:
      N2N_IP:
        description: 'Assign the local ip address for N2N edge:'
        required: true
        default: '172.16.40.122'
        type: string
      SSH_PUBKEY:
        description: 'Use SSH public key'
        required: true
        default: true
        type: boolean
jobs:
  init:
    name: Initialize Windows-Latest Instance
    runs-on: windows-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Kill firewall
        run: |
          netsh advfirewall set allprofiles state off
      - name: Disable Password Complexity
        run: |
          secedit /export /cfg c:\secpol.cfg
          (gc C:\secpol.cfg).replace("PasswordComplexity = 1", "PasswordComplexity = 0") | Out-File C:\secpol.cfg
          secedit /configure /db c:\windows\security\local.sdb /cfg c:\secpol.cfg /areas SECURITYPOLICY
          rm -force c:\secpol.cfg -confirm:$false
      - name: Allow remote login with blank passwords
        run: |
          Set-ItemProperty -Path HKLM:\SYSTEM\CurrentControlSet\Control\Lsa -Name LimitBlankPasswordUse -Value 0 -Force
      - name: Install OpenSSH server
        run: |
          Expand-Archive -Path .\windows\OpenSSH-Win64.zip -DestinationPath .\windows\
          cd .\windows\OpenSSH-Win64\
          powershell.exe -ExecutionPolicy Bypass -File install-sshd.ps1
      - name: Config sshd and credentials for root
        run: |
          net user root /add
          net localgroup Administrators root /add
          Copy-Item ".\windows\sshd_config" -Destination "C:\ProgramData\ssh\"
          New-ItemProperty -Path "HKLM:\SOFTWARE\OpenSSH" -Name DefaultShell -Value "C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe" -PropertyType String -Force
          net start sshd
      - name: Set SSH public key
        if: ${{ inputs.SSH_PUBKEY }}
        env:
          SSH_PUBKEY: ${{ secrets.SSH_PUBKEY }}
        run: |
          echo ${env:SSH_PUBKEY} > "C:\ProgramData\ssh\administrators_authorized_keys"
          icacls.exe "C:\ProgramData\ssh\administrators_authorized_keys" /inheritance:r /grant "Administrators:F" /grant "SYSTEM:F"
      - name: Install TAP Windows Adapter V9
        run: |
          cd .\windows\amd64
          .\tapinstall.exe install OemVista.inf tap0901
      - name: Launch N2N
        env:
          N2N_SUPERNODE_HOST: ${{ secrets.N2N_SUPERNODE_HOST }}
          N2N_SUPERNODE_PORT: ${{ secrets.N2N_SUPERNODE_PORT }}
          N2N_COMMUNITY: ${{ secrets.N2N_COMMUNITY }}
          N2N_KEY: ${{ secrets.N2N_KEY }}
          N2N_IP: ${{ inputs.N2N_IP }}
        run: |
          Start-Process -WindowStyle hidden -FilePath ".\windows\edge.exe" -ArgumentList "-c ${env:N2N_COMMUNITY} -l ${env:N2N_SUPERNODE_HOST}:${env:N2N_SUPERNODE_PORT} -a ${env:N2N_IP} -k ${env:N2N_KEY} -A3"
      - name: Preparing dead-man trigger
        run: |
          Copy-Item ".\windows\maintain.bat" -Destination "D:\"
          New-Item "D:\remove_me_for_self_destruct" -type file
          Copy-Item ".\windows\self_destruct.bat" -Destination "D:\"
          Copy-Item ".\windows\regret.bat" -Destination "D:\"
          echo "=============================================================="
          echo "Run this command to terminate after at most 1 minute:"
          echo "---------------------------------------------------------"
          echo "D:\self_destruct.bat"
          echo "=============================================================="
          echo "=============================================================="
          echo "Run this command if you regret within 1 minute:"
          echo "---------------------------------------------------------"
          echo "D:\regret.bat"
          echo "=============================================================="  
      - name: Maintaining
        run: |
          C:\Users\root\maintain.bat
