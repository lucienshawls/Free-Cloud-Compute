name: Ubuntu
on:
  workflow_dispatch:
    inputs:
      IDENTIFIER:
        description: 'Input an identifier:'
        required: true
        default: 'ubuntu'
        type: string
      USE_N2N:
        description: 'Use N2N edge to connect'
        required: true
        default: true
        type: boolean
      N2N_IP:
        description: 'Specify the tap ip address for N2N edge'
        required: false
        default: '172.16.40.122'
        type: string
      USE_FRP:
        description: 'Use FRPC to connect'
        required: true
        default: false
        type: boolean
      FRP_SSH_PORT:
        description: 'Specify the remote SSH port (forwarding)'
        required: false
        default: '10022'
        type: string
      SSH_PUBKEY:
        description: 'Use SSH public key'
        required: false
        default: true
        type: boolean
jobs:
  init:
    name: Initialize Ubuntu-Latest Instance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Configure sshd service and set credentials for root
        run: |
          sudo passwd -d root
          sudo cp -f ./ubuntu/sshd_config /etc/ssh/
          sudo systemctl restart sshd
      - name: Set SSH public key
        if: ${{ inputs.SSH_PUBKEY }}
        env:
          SSH_PUBKEY: ${{ secrets.SSH_PUBKEY }}
        run: |
          sudo chmod 777 /root
          sudo chmod 777 /root/.ssh
          sudo chmod 777 /root/.ssh/authorized_keys
          sudo echo $SSH_PUBKEY > /root/.ssh/authorized_keys
          sudo chown root /root/.ssh/authorized_keys
          sudo chmod 600 /root/.ssh/authorized_keys
          sudo chmod 700 /root/.ssh
          sudo chmod 700 /root
          mkdir /home/runner/.ssh
          echo $SSH_PUBKEY > /home/runner/.ssh/authorized_keys
          chmod 600 /home/runner/.ssh/authorized_keys
          chmod 700 /home/runner/.ssh
      - name: Install N2N
        if: ${{ inputs.USE_N2N }}
        run: |
          sudo dpkg -i ./ubuntu/n2n_3.0.0-1038_amd64.deb
      - name: Configure N2N
        if: ${{ inputs.USE_N2N }}
        env:
          N2N_SUPERNODE_HOST: ${{ secrets.N2N_SUPERNODE_HOST }}
          N2N_SUPERNODE_PORT: ${{ secrets.N2N_SUPERNODE_PORT }}
          N2N_COMMUNITY: ${{ secrets.N2N_COMMUNITY }}
          N2N_KEY: ${{ secrets.N2N_KEY }}
          N2N_IP: ${{ inputs.N2N_IP }}
          IDENTIFIER: ${{ inputs.IDENTIFIER }}
          N2N_CONF_FILE: /etc/n2n/edge.conf
        run: |
          sudo chmod -R 777 /etc/n2n
          sudo touch $N2N_CONF_FILE
          sudo echo "-c=$N2N_COMMUNITY" >> $N2N_CONF_FILE
          sudo echo "-I=$IDENTIFIER" >> $N2N_CONF_FILE
          sudo echo "-l=$N2N_SUPERNODE_HOST:$N2N_SUPERNODE_PORT" >> $N2N_CONF_FILE
          sudo echo "-a=$N2N_IP" >> $N2N_CONF_FILE
          sudo echo "-k=$N2N_KEY" >> $N2N_CONF_FILE
          sudo echo "-A3" >> $N2N_CONF_FILE
      - name: Launch N2N
        run: |
          sudo systemctl daemon-reload
          sudo systemctl enable edge
          sudo systemctl start edge
      - name: Launch FRPC
        if: ${{ inputs.USE_FRP }}
        env:
          FRP_SERVER_ADDR: ${{ secrets.FRP_SERVER_ADDR }}
          FRP_SERVER_PORT: ${{ secrets.FRP_SERVER_PORT }}
          FRP_TOKEN: ${{ secrets.FRP_TOKEN }}
          FRP_SSH_PORT: ${{ inputs.FRP_SSH_PORT }}
        run: |
          chmod +x ./ubuntu/frpc
          nohup ./ubuntu/frpc -c ./ubuntu/frpc.ini &
      - name: Prepare the self-destruct trigger
        run: |
          sudo cp ./ubuntu/maintain.sh /root/
          sudo chmod +x /root/maintain.sh
          sudo touch /root/remove_me_for_self_destruct
          sudo chmod +r /root/remove_me_for_self_destruct
          sudo cp ./ubuntu/self_destruct.sh /root/
          sudo chmod +x /root/self_destruct.sh
          sudo cp ./ubuntu/regret.sh /root/
          sudo chmod +x /root/regret.sh
          echo "=============================================================="
          echo "Run either command to terminate after at most 1 minute:"
          echo "---------------------------------------------------------"
          echo "sudo rm -f /root/remove_me_for_self_destruct"
          echo "sudo /root/self_destruct.sh"
          echo "=============================================================="
          echo "=============================================================="
          echo "Run either command if you regret within 1 minute:"
          echo "---------------------------------------------------------"
          echo "sudo touch /root/remove_me_for_self_destruct"
          echo "sudo /root/regret.sh"
          echo "=============================================================="
      - name: Maintaining
        run: |
          sudo /root/maintain.sh
